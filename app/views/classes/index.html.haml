= render partial: "alert_apprentices"

- if @classes.none?
  %p Récupération de la liste des élèves en cours (si ces derniers sont présents dans les bases de données dans BEE [SYGNE] ou COLENTAGRI [FREGATA]).
- else
  .fr-table.fr-table--no-caption
    %table
      %caption.fr-h1 Liste des classes
      %thead
        %th{scope: "col"} Classe
        %th{scope: "col"} Décisions d'attribution
        %th{scope: "col"} Coordonnées bancaires
        %th{scope: "col"} PFMPs
        %th{scope: "col"} Paiements
      %tbody
        - @classes.each do |classe|
          %tr
            %td= dsfr_link_to classe.to_long_s, school_year_class_path(selected_school_year, classe), title: t("links.classes.show", label: classe.to_long_s)
            %td= attributive_decisions_progress_badge(classe.schoolings)
            %td= ribs_progress_badge(classe.schoolings)
            %td
              = pfmps_status_count_badge :pending, @classes_facade.nb_pfmps(classe.id, :pending)
              = pfmps_status_count_badge :completed, @classes_facade.nb_pfmps(classe.id, :completed)
              = pfmps_status_count_badge :validated, @classes_facade.nb_pfmps(classe.id, :validated)
            %td
              = payment_requests_status_count_badge :pending, @classes_facade.nb_payment_requests(classe, %i[pending ready])
              = payment_requests_status_count_badge :sent, @classes_facade.nb_payment_requests(classe, %i[sent integrated])
              = payment_requests_status_count_badge :incomplete, @classes_facade.nb_payment_requests(classe, %i[incomplete rejected unpaid])
              = payment_requests_status_count_badge :paid, @classes_facade.nb_payment_requests(classe, %i[paid])
